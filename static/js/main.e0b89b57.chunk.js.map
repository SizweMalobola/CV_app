{"version":3,"sources":["components/Header.js","components/Buttons.js","components/Inputfields.js","components/Textarea.js","components/Sections.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","Buttons","props","state","text","inputs","formEl","document","querySelector","checkValidity","inputEls","querySelectorAll","console","log","Array","from","this","setState","forEach","el","replacement","createElement","classList","add","innerText","value","replaceWith","textEls","savedInputs","index","formId","expandHandler","collapseHandler","className","onClick","e","checkValid","preventDefault","displayText","target","setAttribute","type","displayInput","previousSibling","removeAttribute","Component","Inputfields","string","newString","toLowerCase","split","join","label","htmlFor","makeId","required","onInput","Textarea","cols","rows","labelId","Sections","expandWork","expandEducation","setExpandW","bind","setCollapseW","setExpandE","setCollapseE","workChildren","educationChildren","i","push","number","style","marginTop","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0b89b57.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaGithub } from \"react-icons/fa\";\n\nexport default function Header() {\n  return (\n    <header>\n      <h1>REACT C.V APPLICATION</h1>\n      <FaGithub id=\"header-icon\" />\n    </header>\n  );\n}\n","import React, { Component } from \"react\";\nimport { FaCheck, FaEdit, FaPlus, FaTimes } from \"react-icons/fa\";\n\nexport default class Buttons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: false,\n      inputs: null,\n    };\n  }\n\n  checkValid(formEl) {\n    let form = document.querySelector(formEl);\n    return form.checkValidity();\n  }\n  displayText(formEl) {\n    let form = document.querySelector(formEl);\n    let inputEls = form.querySelectorAll(\"input\");\n    console.log(Array.from(inputEls));\n    this.setState({\n      text: true,\n      inputs: Array.from(inputEls),\n    });\n    inputEls.forEach((el) => {\n      let replacement = document.createElement(\"span\");\n      replacement.classList.add(\"text-element\");\n      replacement.innerText = el.value;\n      el.replaceWith(replacement);\n    });\n  }\n  displayInput() {\n    let textEls = document.querySelectorAll(\".text-element\");\n    let savedInputs = this.state.inputs;\n    this.setState({\n      text: false,\n    });\n    savedInputs.forEach((el, index) => {\n      textEls[index].replaceWith(el);\n    });\n  }\n  render() {\n    const { formId, add, expandHandler, collapseHandler } = this.props;\n    return (\n      <div className=\"button-div\">\n        <button\n          onClick={(e) => {\n            if (this.checkValid(formId)) {\n              e.preventDefault();\n              this.displayText(formId);\n              //   disabling buttons so it doesn't erase inputs\n              e.target.setAttribute(\"disabled\", true);\n            }\n          }}\n          className=\"submit-button\"\n          type=\"submit\"\n        >\n          Submit <FaCheck />\n        </button>\n        <button\n          className=\"edit-button\"\n          onClick={(e) => {\n            e.preventDefault();\n            if (this.state.text) {\n              this.displayInput();\n              e.target.previousSibling.removeAttribute(\"disabled\");\n            }\n          }}\n        >\n          Edit <FaEdit />\n        </button>\n        {/* conditionally rendered buttons  */}\n        {add && (\n          <>\n            <button\n              className=\"expand-button\"\n              onClick={(e) => {\n                //   this must only run when you can still fill in inputfield\n                e.preventDefault();\n                if (this.state.text === false) {\n                  console.log(\"clicked on expand\");\n                  expandHandler();\n                }\n              }}\n            >\n              Expand <FaPlus />\n            </button>\n            <button\n              className=\"collapse-button\"\n              onClick={(e) => {\n                //   this must only run when you can still fill in inputfield\n                e.preventDefault();\n                if (this.state.text === false) {\n                  console.log(\"clicked on collapse\");\n                  collapseHandler();\n                }\n              }}\n            >\n              Collapse <FaTimes />\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Inputfields extends Component {\n  makeId(string) {\n    let newString = string.toLowerCase().split(\" \");\n    newString = newString.join(\"-\");\n    return newString;\n  }\n  render() {\n    const { label, type } = this.props;\n    return (\n      <div className=\"inputfield-div\">\n        <label htmlFor={this.makeId(label)}>{label} </label>\n        <input\n          type={type}\n          required={true}\n          onInput={(e) => {\n            e.target.checkValidity();\n          }}\n        ></input>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Textarea({ label, cols, rows }) {\n  let labelId = label.toLowerCase().split(\" \");\n  labelId = labelId.join(\"-\");\n  return (\n    <div className=\"textarea-div\">\n      <label htmlFor={labelId}>{label} </label>\n      <textarea rows={rows} cols={cols} required={true}></textarea>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Buttons from \"./Buttons\";\nimport Inputfields from \"./Inputfields\";\nimport Textarea from \"./Textarea\";\n\nexport default class Sections extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandWork: 0,\n      expandEducation: 0,\n    };\n    // work expantion\n    this.setExpandW = this.setExpandW.bind(this);\n    this.setCollapseW = this.setCollapseW.bind(this);\n    // education expantion\n    this.setExpandE = this.setExpandE.bind(this);\n    this.setCollapseE = this.setCollapseE.bind(this);\n  }\n  // function when called changes state\n  setExpandW() {\n    this.setState({\n      expandWork: this.state.expandWork + 1,\n    });\n  }\n  setExpandE() {\n    this.setState({\n      expandEducation: this.state.expandEducation + 1,\n    });\n  }\n  setCollapseW() {\n    if (this.state.expandWork !== 0) {\n      console.log(\"not !== 0\");\n      this.setState({\n        expandWork: this.state.expandWork - 1,\n      });\n    }\n  }\n  setCollapseE() {\n    if (this.state.expandEducation !== 0) {\n      console.log(\"not !== 0\");\n      this.setState({\n        expandEducation: this.state.expandEducation - 1,\n      });\n    }\n  }\n  render() {\n    // expand work functionality\n    const workChildren = [];\n    const educationChildren = [];\n    // work\n    for (let i = 0; i < this.state.expandWork; i++) {\n      workChildren.push(\n        <div\n          key={i + \"w\"}\n          number={i + \"w\"}\n          style={{ marginTop: \"2rem\" }}\n          className=\"expanded-work\"\n        >\n          <Inputfields label=\"Dates\" type=\"date\" />\n          <Inputfields label=\"Positions\" type=\"text\" />\n          <Inputfields label=\"Responsibilities\" type=\"textarea\" />\n          <Inputfields label=\"Employer/ Address\" type=\"text\" />\n          <Inputfields label=\"Type Of Business\" type=\"text\" />\n        </div>\n      );\n    }\n    // education\n    for (let i = 0; i < this.state.expandEducation; i++) {\n      educationChildren.push(\n        <div\n          key={i + \"e\"}\n          number={i + \"e\"}\n          style={{ marginTop: \"2rem\" }}\n          className=\"expanded-education\"\n        >\n          <Inputfields label=\"Dates\" type=\"date\" />\n          <Inputfields label=\"Qualification Awarded\" type=\"text\" />\n          <Inputfields label=\"Pricipal Studies\" type=\"text\" />\n          <Inputfields label=\"Institution\" type=\"text\" />\n        </div>\n      );\n    }\n    return (\n      <>\n        <section>\n          <h3 className=\"section-header\">Personal Information</h3>\n          <form id=\"personal-section\">\n            <Inputfields label=\"First Name/ Surname\" type=\"text\" />\n            <Inputfields label=\"Address\" type=\"text\" />\n            <Inputfields label=\"Tel\" type=\"tel\" />\n            <Inputfields label=\"Email\" type=\"email\" />\n            <Inputfields label=\"Nationality\" type=\"text\" />\n            <Inputfields label=\"Date Of Birth\" type=\"date\" />\n            <Inputfields label=\"Gender\" type=\"text\" />\n            <Buttons formId=\"#personal-section\" add={false} />\n          </form>\n        </section>\n        <section>\n          <h3 className=\"section-header\">Work Experience</h3>\n          <form id=\"work-section\">\n            <Inputfields label=\"Dates\" type=\"date\" />\n            <Inputfields label=\"Positions\" type=\"text\" />\n            <Inputfields label=\"Responsibilities\" type=\"text\" />\n            <Inputfields label=\"Employer/ Address\" type=\"text\" />\n            <Inputfields label=\"Type Of Business\" type=\"text\" />\n            {workChildren}\n            <Buttons\n              formId=\"#work-section\"\n              add={true}\n              expandHandler={this.setExpandW}\n              collapseHandler={this.setCollapseW}\n            />\n          </form>\n        </section>\n        <section>\n          <h3 className=\"section-header\">Education and Training</h3>\n          <form id=\"education-section\">\n            <Inputfields label=\"Dates\" type=\"date\" />\n            <Inputfields label=\"Qualification Awarded\" type=\"text\" />\n            <Inputfields label=\"Pricipal Studies\" type=\"text\" />\n            <Inputfields label=\"Institution\" type=\"text\" />\n            {educationChildren}\n            <Buttons\n              formId=\"#education-section\"\n              add={true}\n              expandHandler={this.setExpandE}\n              collapseHandler={this.setCollapseE}\n            />\n          </form>\n        </section>\n        <section>\n          <h3 className=\"section-header\">Skills and Competences</h3>\n          <form id=\"skills-section\">\n            <Inputfields label=\"Language Spoken\" type=\"text\" />\n            <Inputfields label=\"Other Language(s)\" type=\"text\" />\n            {/* textarea */}\n            <Textarea label=\"Social Skills\" cols=\"50\" rows=\"3\" />\n            <Textarea label=\"Organisational Skills\" cols=\"50\" rows=\"3\" />\n            <Textarea label=\"Computer Skills\" cols=\"50\" rows=\"3\" />\n            <Textarea label=\"Additional Information\" cols=\"50\" rows=\"3\" />\n            <Buttons formId=\"#education-section\" add={false} />\n          </form>\n        </section>\n      </>\n    );\n  }\n}\n/* create state expandwork that will have a value of a number, initial will be 0.\n This state will dictate how many times the user will expand the work section of the form.\n  When expand button is clicked, the value of expandwork(state) will incriment by one,\n   which will run the function workexpanded() that takes the value of the expandwork state as an arguement,\n    which will loop for expandwork state number of times.*/\n","import React, { Component } from \"react\";\nimport Sections from \"./Sections\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <main>\n        <Sections />\n      </main>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"container\">\n        <Header />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}